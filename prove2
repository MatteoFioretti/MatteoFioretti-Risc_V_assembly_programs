.data
	tree: .word root
	root: .word -20,child1,0
	child1: .word -10,child2,bro1            # value, child , bro
	bro1: .word 20,child3,bro2
	bro2: .word 5,child4,0
	child2: .word 10,0,bro3
	bro3: .word 30,0,0
	child3: .word 4,0,0
	child4: .word -5,0,0 
	
	
.text
		li s0,0 # store root's adress 
	li t0,0 # store nodes' adress
	li t1,0 # store value 
	li t2,0 # compute sum
	li t3,0 # child
	li t4,0 # bro
	li a0,0 # store highest sum
	la t0,tree
	lw s0,0(t0)
	beq s0,zero,stop # is the tree empty?
	mv t0,s0
	jal ra func1
stop:	li a7,10
	ecall
	
	func1:
		
		lw t1,0(t0)
		lw t3,4(t0)
		bnez t3,child
	check:	lw t4,8(t0)
		bnez t4,bro
		lw t0,0(sp)
		beq t0,s0,end
		sw zero,0(sp)
		addi sp,sp,4
		j check
	end:	jalr zero,ra,0
		
		child:
		addi sp,sp,-4
		sw t0,0(sp)
		mv t0,t3
		j func1
		
		bro:
		mv t0,t4
		j func1
		
		
		